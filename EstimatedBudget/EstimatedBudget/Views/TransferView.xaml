<Page x:Class="EstimatedBudget.Views.TransferView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
      xmlns:UC="clr-namespace:EstimatedBudget.UserControls"
      xmlns:Converter="clr-namespace:EstimatedBudget.Converters"
      xmlns:sysglb="clr-namespace:System.Globalization;assembly=mscorlib"
       xmlns:local="clr-namespace:EstimatedBudget.Views"
      x:Name="Frame"
      Background="{StaticResource AccentBackgroundColorFrame}"  
      DataContext="{Binding Transfer, Source={StaticResource Locator}}"
      dialogs:DialogParticipation.Register="{Binding}">

    <Grid Margin="10,20,10,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="ColDatagrid" >
                <ColumnDefinition.Width>
                    <MultiBinding  Converter="{StaticResource AdaptiveDataGridConverter}">
                        <MultiBinding.Bindings>
                            <Binding ElementName="Datagrid" Path="ActualWidth" />
                            <Binding ElementName="Specs" Path="ActualWidth"/>
                            <Binding ElementName="Frame" Path="ActualWidth"/>
                            <Binding ElementName="Specs" Path="Visibility"/>
                        </MultiBinding.Bindings>
                    </MultiBinding>
                </ColumnDefinition.Width>
            </ColumnDefinition>
            <ColumnDefinition Width="Auto"  />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.RowSpan="2" Background="{StaticResource  AccentDatagridBackgroundHeader}" >
            <Border BorderThickness="3,3,3,0" BorderBrush="{DynamicResource AccentColorBrush}"/>
        </Grid>


        <!-- DATAGRID -->
        <DataGrid  x:Name="Datagrid" Style="{DynamicResource DataGridStyle}" SelectedItem="{Binding SpecsTransfer}"  Grid.Column="0"  Grid.Row="1"  ItemsSource="{Binding Transfers}">

            <DataGrid.Columns>
                <UC:DataGridEditColumn/>
                <DataGridTextColumn Header="Libellé" CanUserSort="False" Binding="{Binding Path=Wording}" />
                <DataGridTextColumn Header="Fréquence" CanUserSort="False" Binding="{Binding Path=Frequency.Wording}" />
                <DataGridTextColumn Header="Category" CanUserSort="False" Binding="{Binding Path=Category.Wording}" />
                <DataGridTextColumn Header="Date" CanUserSort="False" Binding="{Binding Path=DateL,StringFormat='{}{0:dd/MM/yyyy}'}" />
            </DataGrid.Columns>
        </DataGrid>

        <Grid Name="Specs"   Grid.Column="1"  Grid.RowSpan="2"  Style="{StaticResource mySpecsStyle}" Visibility="{Binding ActiveMode, Converter={StaticResource SpecsVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- G1 -->
            <Grid Style="{StaticResource mySpecsStyle}" Margin="0,0,0.2,-0.2" Grid.RowSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Définition du Virement" Style="{StaticResource SpecsLabelTitleStyle}" Grid.Row="0" Grid.ColumnSpan="2" 
                           IsEnabled="{Binding ActiveMode, Converter={StaticResource EnabledAddModeConverter}}">
                    <Run Text="{Binding CurrentTable,UpdateSourceTrigger=PropertyChanged}"/>
                </TextBlock>

                <!-- Beneficiary -->
                <TextBlock Grid.Row="1"  Text="Bénéficiaire :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"/>
                <RadioButton Name="ChkExisting" BorderThickness="2" Grid.Row="1" Grid.Column="1" Content="Existant" GroupName="1" IsChecked="{Binding RdoCodeBeneficiary,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="20,0,0,0"/>
                <RadioButton x:Name="ChkOther" Grid.Row="1" Grid.Column="1" Content="Autres" GroupName="1"  IsChecked="{Binding RdoBeneficiary, Mode=TwoWay,ValidatesOnDataErrors=True,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" Margin="90,0,0,0"/>

                <!-- Combo Beneficiray -->
                <TextBlock Grid.Row="2"  Text="Compte Existant :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"
                           Visibility="{Binding RdoCodeBeneficiary, Converter={StaticResource VisiblityToCheckedConverter},ConverterParameter=1}"/>
                <ComboBox Width="170" Grid.Row="2" Grid.Column="1" Style="{StaticResource ComboStyle}" 
                          ItemsSource="{Binding BankAccounts}"  IsReadOnly="True"
                          SelectedItem="{Binding SelectedBankAccount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                          Controls:TextBoxHelper.Watermark="Comptes..."
                          Validation.ErrorTemplate="{StaticResource ComboBoxErrorTemplate}"
                          HorizontalAlignment="Left"
                          Margin="20,5,0,5"
                          Visibility="{Binding RdoCodeBeneficiary, Converter={StaticResource VisiblityToCheckedConverter},ConverterParameter=1}"
                          SelectedIndex="0">
                </ComboBox>
                
                <!-- Other Beneficiaray-->
                <TextBlock x:Name="TitleOther" Grid.Row="2"  Text="Autre Compte :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"
                           Visibility="{Binding RdoCodeBeneficiary, Converter={StaticResource VisiblityToCheckedConverter},ConverterParameter=2}"/>
                <TextBox x:Name="Other" Grid.Row="2"  MaxLength="10" Grid.Column="1" 
                         Text="{Binding Beneficiary,ValidatesOnDataErrors=True,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource SpecsTextboxStyleLongText}" Validation.ErrorTemplate="{StaticResource TextBoxErrorTemplate}"
                         Visibility="{Binding RdoCodeBeneficiary, Converter={StaticResource VisiblityToCheckedConverter},ConverterParameter=2}" />


                <!-- Libellé -->
                <TextBlock Grid.Row="3"  Text="Libellé :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"/>
                <TextBox Grid.Row="3"  MaxLength="10" Grid.Column="1" Text="{Binding Wording,ValidatesOnDataErrors=True,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SpecsTextboxStyleLongText}" Validation.ErrorTemplate="{StaticResource TextBoxErrorTemplate}"/>

                <!-- Description -->
                <TextBlock Grid.Row="4"  Text="Description :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"/>
                <TextBox Grid.Row="4" MaxLength="10" Grid.Column="1" Text="{Binding Description,ValidatesOnDataErrors=True,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SpecsTextboxStyleLongText}" Validation.ErrorTemplate="{StaticResource TextBoxErrorTemplate}"/>

                <!--Categorie -->
                <TextBlock Grid.Row="5"  Text="Catégorie :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"/>
                <ComboBox Width="170" Grid.Row="5" Grid.Column="1" Style="{StaticResource ComboStyle}" 
                          ItemsSource="{Binding CategoriesItems}" 
                          SelectedItem="{Binding SelectedCategory,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                          Controls:TextBoxHelper.Watermark="Catégorie..."
                          Validation.ErrorTemplate="{StaticResource ComboBoxErrorTemplate}"
                          HorizontalAlignment="Left"
                          Margin="20,5,0,5"
                          SelectedIndex="0"/>

                <!--Frequence-->
                <TextBlock Grid.Row="6"  Text="Freqence :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"/>
                <ComboBox Width="170" Grid.Row="6" Grid.Column="1" Style="{StaticResource ComboStyle}" 
                          ItemsSource="{Binding FrequencyItems,Mode=TwoWay}" 
                          SelectedItem="{Binding SelectedFrequency,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                          Validation.ErrorTemplate="{StaticResource ComboBoxErrorTemplate}"
                          Controls:TextBoxHelper.Watermark="Fréquence..."
                          HorizontalAlignment="Left"
                          Margin="20,5,0,5"
                          SelectedIndex="0"/>


                <!-- Way -->
                <TextBlock Grid.Row="7"  Text="Sens :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"/>
                <RadioButton BorderThickness="2" Grid.Row="7" Grid.Column="1" Content="Entrée" GroupName="2" IsChecked="{Binding Way, Converter={StaticResource CheckBoxConverter},ConverterParameter=1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="20,0,0,0"/>
                <RadioButton Grid.Row="7" Grid.Column="1" Content="Sortie" GroupName="2"  IsChecked="{Binding Way, Converter={StaticResource CheckBoxConverter},ConverterParameter=2, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="90,0,0,0"/>

                
                <TextBlock Grid.Row="8"  Text="Prix :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"/>
                <TextBox Grid.Row="8" MaxLength="10" Grid.Column="1" Text="{Binding Price,ValidatesOnDataErrors=True,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:C}', ConverterCulture={x:Static sysglb:CultureInfo.CurrentUICulture}}" Style="{StaticResource SpecsTextboxStyleText}" Validation.ErrorTemplate="{StaticResource TextBoxErrorTemplate}"/>

                <!-- Date Prélèvement -->
                <TextBlock Grid.Row="9"  Text="Date Prélèvement :" Style="{StaticResource SpecsLabelStyle}" Margin="20,8,30,1"/>
                <DatePicker Grid.Row="9"  Grid.Column="1" Width="170" HorizontalAlignment="Left" Margin="20,5,0,5" SelectedDate="{Binding DateL,ValidatesOnDataErrors=True,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Validation.ErrorTemplate="{StaticResource ComboBoxErrorTemplate}"/>

                


                <!-- BEGIN FICHE -->
                <Grid Grid.Row="10" Grid.Column="1" Margin="0,20,0,10" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button  Name="BtnAnnuler" Command="{Binding ModeCommand}" CommandParameter="DEFAUT" Style="{StaticResource SpecsButtonAnnuler}"/>
                    <Button Grid.Column="1"  Command="{Binding ValidatedCommand}" CommandParameter="{Binding ElementName=Datagrid, Path=SelectedIndex}"  Style="{StaticResource SpecsButtonValider}"/>
                </Grid>
                <!--END BUTTON FICHE -->
            </Grid>
        </Grid>

    </Grid>
</Page>
